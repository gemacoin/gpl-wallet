{"ast":null,"code":"var _jsxFileName = \"/home/imentus/spl-token-wallet/src/components/DomainsList.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Typography, Paper, ListItemText, ListItem, List, Button, Collapse, ListItemIcon, Toolbar, AppBar, InputLabel, TextField, FormControlLabel, Checkbox } from '@material-ui/core';\nimport LoadingIndicator from './LoadingIndicator';\nimport SendIcon from '@material-ui/icons/Send';\nimport { useUserDomains } from '../utils/name-service';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport DnsIcon from '@material-ui/icons/Dns';\nimport Modal from '@material-ui/core/Modal';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport { signAndSendTransaction } from '../utils/tokens';\nimport { useSnackbar } from 'notistack';\nimport { SOL_TLD_AUTHORITY } from '../utils/name-service';\nimport { transferNameOwnership } from '@bonfida/spl-name-service';\nimport { useConnection } from '../utils/connection';\nimport { useWallet } from '../utils/wallet';\nimport { refreshCache } from '../utils/fetch-loop';\nimport tuple from 'immutable-tuple';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  address: {\n    textOverflow: 'ellipsis',\n    overflowX: 'hidden'\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  itemDetails: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2)\n  },\n  text: {\n    color: 'white',\n    fontSize: 24,\n    marginTop: '2%',\n    marginBottom: '2%',\n    opacity: 0.8\n  },\n  input: {\n    color: 'white',\n    fontWeight: 600,\n    width: 500\n  },\n  transferContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  paper: {\n    width: '50%',\n    height: '80%',\n    overflowY: 'scroll'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n}));\n\nconst TransferDialog = _ref => {\n  _s();\n\n  let {\n    domainName,\n    open,\n    setOpen\n  } = _ref;\n  const classes = useStyles();\n  const connection = useConnection();\n  const wallet = useWallet();\n  const [checked, setChecked] = useState(false);\n  const [newOwner, setNewOwner] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const onChange = e => {\n    setNewOwner(e.target.value.trim());\n  };\n\n  const canSumbit = newOwner && checked;\n\n  const onClick = async () => {\n    if (!newOwner) {\n      return enqueueSnackbar('Invalid input', {\n        variant: 'error'\n      });\n    }\n\n    let newOwnerPubkey;\n\n    try {\n      newOwnerPubkey = new PublicKey(newOwner);\n    } catch {\n      return enqueueSnackbar('Invalid input', {\n        variant: 'error'\n      });\n    }\n\n    try {\n      setLoading(true);\n      const instructions = await transferNameOwnership(connection, domainName, newOwnerPubkey, undefined, SOL_TLD_AUTHORITY);\n      await signAndSendTransaction(connection, new Transaction().add(instructions), wallet, []);\n      enqueueSnackbar('Domain name transfered', {\n        variant: 'success'\n      });\n      setOpen(false);\n    } catch (err) {\n      console.warn(`Error transferring domain name ${err}`);\n      return enqueueSnackbar('Error transferring domain name', {\n        variant: 'error'\n      });\n    } finally {\n      var _wallet$publicKey;\n\n      refreshCache(tuple('useUserDomain', wallet === null || wallet === void 0 ? void 0 : (_wallet$publicKey = wallet.publicKey) === null || _wallet$publicKey === void 0 ? void 0 : _wallet$publicKey.toBase58()));\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    open: open,\n    onClose: () => setOpen(false),\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"sticky\",\n        elevation: 1,\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            style: {\n              flexGrow: 1\n            },\n            component: \"h2\",\n            children: \"Ownership transfer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.transferContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            className: classes.text,\n            shrink: true,\n            children: \"New Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            placeholder: \"New owner\",\n            InputProps: {\n              className: classes.input\n            },\n            value: newOwner,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: checked,\n            onChange: e => setChecked(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this),\n          label: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"I understand that transferring ownership is irreversible\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClick,\n          disabled: !canSumbit || loading,\n          variant: \"outlined\",\n          color: \"primary\",\n          style: {\n            padding: 10\n          },\n          children: loading ? /*#__PURE__*/_jsxDEV(LoadingIndicator, {\n            height: \"10px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 24\n          }, this) : 'Transfer'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransferDialog, \"MOyxJM0RVwmgnC1xQsKmt+2StIg=\", false, function () {\n  return [useStyles, useConnection, useWallet, useSnackbar];\n});\n\n_c = TransferDialog;\n\nconst DomainListItemDetails = _ref2 => {\n  _s2();\n\n  let {\n    domainName\n  } = _ref2;\n  const classes = useStyles();\n  const [transferVisible, setTransferVisible] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonContainer,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setTransferVisible(true),\n        startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 22\n        }, this),\n        variant: \"outlined\",\n        color: \"primary\",\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransferDialog, {\n        domainName: domainName,\n        open: transferVisible,\n        setOpen: setTransferVisible\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => window.open(`https://naming.bonfida.org/#/domain-registration/${domainName}`, '_blank'),\n        startIcon: /*#__PURE__*/_jsxDEV(GavelIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 22\n        }, this),\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: \"Sell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s2(DomainListItemDetails, \"LsUQxDzA9+PhoPtZ5T1yc4IeMOc=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = DomainListItemDetails;\n\nconst DomainListItem = _ref3 => {\n  _s3();\n\n  let {\n    domainName,\n    domainKey\n  } = _ref3;\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      onClick: () => setOpen(prev => !prev),\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: /*#__PURE__*/_jsxDEV(DnsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: `${domainName}.gema`,\n        secondary: domainKey.toBase58(),\n        secondaryTypographyProps: {\n          className: classes.address\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), open ? /*#__PURE__*/_jsxDEV(ExpandLess, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: open,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(DomainListItemDetails, {\n        domainName: domainName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s3(DomainListItem, \"TsAExMDA6yuxA58uE+YzDgG8Jdg=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = DomainListItem;\n\nconst DomainsList = () => {\n  _s4();\n\n  const [userDomains, userDomainsLoaded] = useUserDomains();\n\n  if (!userDomainsLoaded) {\n    return /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (userDomainsLoaded && (userDomains === null || userDomains === void 0 ? void 0 : userDomains.length) === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      align: \"center\",\n      children: \"You don't own any domain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: userDomains === null || userDomains === void 0 ? void 0 : userDomains.map(d => {\n        return /*#__PURE__*/_jsxDEV(DomainListItem, {\n          domainName: d.name,\n          domainKey: d.nameKey\n        }, d.nameKey.toBase58(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s4(DomainsList, \"4CB7f+ajReZBEj8kdUiqGFrryrE=\", false, function () {\n  return [useUserDomains];\n});\n\n_c4 = DomainsList;\n\nconst DomainDialog = _ref4 => {\n  _s5();\n\n  let {\n    open,\n    setOpen\n  } = _ref4;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: () => setOpen(false),\n    className: classes.modal,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"sticky\",\n        color: \"default\",\n        elevation: 1,\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            style: {\n              flexGrow: 1\n            },\n            component: \"h2\",\n            children: \"Your domains\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DomainsList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n\n_s5(DomainDialog, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c5 = DomainDialog;\nexport default DomainDialog;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TransferDialog\");\n$RefreshReg$(_c2, \"DomainListItemDetails\");\n$RefreshReg$(_c3, \"DomainListItem\");\n$RefreshReg$(_c4, \"DomainsList\");\n$RefreshReg$(_c5, \"DomainDialog\");","map":{"version":3,"sources":["/home/imentus/spl-token-wallet/src/components/DomainsList.tsx"],"names":["React","useState","Typography","Paper","ListItemText","ListItem","List","Button","Collapse","ListItemIcon","Toolbar","AppBar","InputLabel","TextField","FormControlLabel","Checkbox","LoadingIndicator","SendIcon","useUserDomains","makeStyles","PublicKey","Transaction","DnsIcon","Modal","ExpandLess","ExpandMore","GavelIcon","signAndSendTransaction","useSnackbar","SOL_TLD_AUTHORITY","transferNameOwnership","useConnection","useWallet","refreshCache","tuple","useStyles","theme","address","textOverflow","overflowX","buttonContainer","display","justifyContent","marginTop","spacing","marginBottom","itemDetails","marginLeft","marginRight","text","color","fontSize","opacity","input","fontWeight","width","transferContainer","flexDirection","alignItems","padding","paper","height","overflowY","modal","TransferDialog","domainName","open","setOpen","classes","connection","wallet","checked","setChecked","newOwner","setNewOwner","loading","setLoading","enqueueSnackbar","onChange","e","target","value","trim","canSumbit","onClick","variant","newOwnerPubkey","instructions","undefined","add","err","console","warn","publicKey","toBase58","flexGrow","className","DomainListItemDetails","transferVisible","setTransferVisible","window","DomainListItem","domainKey","prev","DomainsList","userDomains","userDomainsLoaded","length","map","d","name","nameKey","DomainDialog"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Typography,\n  Paper,\n  ListItemText,\n  ListItem,\n  List,\n  Button,\n  Collapse,\n  ListItemIcon,\n  Toolbar,\n  AppBar,\n  InputLabel,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n} from '@material-ui/core';\nimport LoadingIndicator from './LoadingIndicator';\nimport SendIcon from '@material-ui/icons/Send';\nimport { useUserDomains } from '../utils/name-service';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport DnsIcon from '@material-ui/icons/Dns';\nimport Modal from '@material-ui/core/Modal';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport { signAndSendTransaction } from '../utils/tokens';\nimport { useSnackbar } from 'notistack';\nimport { SOL_TLD_AUTHORITY } from '../utils/name-service';\nimport { transferNameOwnership } from '@bonfida/spl-name-service';\nimport { useConnection } from '../utils/connection';\nimport { useWallet } from '../utils/wallet';\nimport { refreshCache } from '../utils/fetch-loop';\nimport tuple from 'immutable-tuple';\n\nconst useStyles = makeStyles((theme) => ({\n  address: {\n    textOverflow: 'ellipsis',\n    overflowX: 'hidden',\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  itemDetails: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n  text: {\n    color: 'white',\n    fontSize: 24,\n    marginTop: '2%',\n    marginBottom: '2%',\n    opacity: 0.8,\n  },\n  input: {\n    color: 'white',\n    fontWeight: 600,\n    width: 500,\n  },\n  transferContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  paper: {\n    width: '50%',\n    height: '80%',\n    overflowY: 'scroll',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n}));\n\nconst TransferDialog = ({\n  domainName,\n  open,\n  setOpen,\n}: {\n  domainName: string;\n  open: boolean;\n  setOpen: (args: boolean) => void;\n}) => {\n  const classes = useStyles();\n  const connection = useConnection();\n  const wallet = useWallet();\n  const [checked, setChecked] = useState(false);\n  const [newOwner, setNewOwner] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const onChange = (e) => {\n    setNewOwner(e.target.value.trim());\n  };\n  const canSumbit = newOwner && checked;\n  const onClick = async () => {\n    if (!newOwner) {\n      return enqueueSnackbar('Invalid input', { variant: 'error' });\n    }\n    let newOwnerPubkey: PublicKey;\n    try {\n      newOwnerPubkey = new PublicKey(newOwner);\n    } catch {\n      return enqueueSnackbar('Invalid input', { variant: 'error' });\n    }\n    try {\n      setLoading(true);\n      const instructions = await transferNameOwnership(\n        connection,\n        domainName,\n        newOwnerPubkey,\n        undefined,\n        SOL_TLD_AUTHORITY,\n      );\n      await signAndSendTransaction(\n        connection,\n        new Transaction().add(instructions),\n        wallet,\n        [],\n      );\n      enqueueSnackbar('Domain name transfered', { variant: 'success' });\n      setOpen(false);\n    } catch (err) {\n      console.warn(`Error transferring domain name ${err}`);\n      return enqueueSnackbar('Error transferring domain name', {\n        variant: 'error',\n      });\n    } finally {\n      refreshCache(tuple('useUserDomain', wallet?.publicKey?.toBase58()));\n      setLoading(false);\n    }\n  };\n  return (\n    <Modal\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n      open={open}\n      onClose={() => setOpen(false)}\n    >\n      <Paper>\n        <AppBar position=\"sticky\" elevation={1}>\n          <Toolbar>\n            <Typography variant=\"h6\" style={{ flexGrow: 1 }} component=\"h2\">\n              Ownership transfer\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.transferContainer}>\n          <div>\n            <InputLabel className={classes.text} shrink>\n              New Owner\n            </InputLabel>\n            <TextField\n              placeholder=\"New owner\"\n              InputProps={{\n                className: classes.input,\n              }}\n              value={newOwner}\n              onChange={onChange}\n            />\n          </div>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={checked}\n                onChange={(e) => setChecked(e.target.checked)}\n              />\n            }\n            label={\n              <Typography variant=\"body2\">\n                I understand that transferring ownership is irreversible\n              </Typography>\n            }\n          />\n          <Button\n            onClick={onClick}\n            disabled={!canSumbit || loading}\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{ padding: 10 }}\n          >\n            {loading ? <LoadingIndicator height=\"10px\" /> : 'Transfer'}\n          </Button>\n        </div>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst DomainListItemDetails = ({ domainName }: { domainName: string }) => {\n  const classes = useStyles();\n  const [transferVisible, setTransferVisible] = useState(false);\n  return (\n    <>\n      <div className={classes.buttonContainer}>\n        <Button\n          onClick={() => setTransferVisible(true)}\n          startIcon={<SendIcon />}\n          variant=\"outlined\"\n          color=\"primary\"\n        >\n          Transfer\n        </Button>\n        <TransferDialog\n          domainName={domainName}\n          open={transferVisible}\n          setOpen={setTransferVisible}\n        />\n        <Button\n          onClick={() =>\n            window.open(\n              `https://naming.bonfida.org/#/domain-registration/${domainName}`,\n              '_blank',\n            )\n          }\n          startIcon={<GavelIcon />}\n          variant=\"outlined\"\n          color=\"secondary\"\n        >\n          Sell\n        </Button>\n      </div>\n    </>\n  );\n};\n\nconst DomainListItem = ({\n  domainName,\n  domainKey,\n}: {\n  domainName: string;\n  domainKey: PublicKey;\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <ListItem onClick={() => setOpen((prev) => !prev)}>\n        <ListItemIcon>\n          <DnsIcon />\n        </ListItemIcon>\n        <ListItemText\n          primary={`${domainName}.gema`}\n          secondary={domainKey.toBase58()}\n          secondaryTypographyProps={{ className: classes.address }}\n        />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <DomainListItemDetails domainName={domainName} />\n      </Collapse>\n    </>\n  );\n};\n\nconst DomainsList = () => {\n  const [userDomains, userDomainsLoaded] = useUserDomains();\n  if (!userDomainsLoaded) {\n    return <LoadingIndicator />;\n  }\n  if (userDomainsLoaded && userDomains?.length === 0) {\n    return (\n      <Typography variant=\"body1\" align=\"center\">\n        You don't own any domain\n      </Typography>\n    );\n  }\n  return (\n    <>\n      <List>\n        {userDomains?.map((d) => {\n          return (\n            <DomainListItem\n              key={d.nameKey.toBase58()}\n              domainName={d.name}\n              domainKey={d.nameKey}\n            />\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nconst DomainDialog = ({\n  open,\n  setOpen,\n}: {\n  open: boolean;\n  setOpen: (arg: boolean) => void;\n}) => {\n  const classes = useStyles();\n  return (\n    <Modal open={open} onClose={() => setOpen(false)} className={classes.modal}>\n      <Paper className={classes.paper}>\n        <AppBar position=\"sticky\" color=\"default\" elevation={1}>\n          <Toolbar>\n            <Typography variant=\"h6\" style={{ flexGrow: 1 }} component=\"h2\">\n              Your domains\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <DomainsList />\n      </Paper>\n    </Modal>\n  );\n};\n\nexport default DomainDialog;\n"]},"metadata":{},"sourceType":"module"}