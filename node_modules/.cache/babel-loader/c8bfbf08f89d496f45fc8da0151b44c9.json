{"ast":null,"code":"var _jsxFileName = \"/home/imentus/spl-token-wallet/src/components/SwapButton.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Tooltip, Popover, IconButton, DialogActions, Button } from '@material-ui/core';\nimport SwapHoriz from '@material-ui/icons/SwapHoriz';\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\nimport Swap from '@project-serum/swap-ui';\nimport { Provider } from '@project-serum/anchor';\nimport { TokenListContainer } from '@solana/spl-token-registry';\nimport { useTokenInfos } from '../utils/tokens/names';\nimport { useSendTransaction } from '../utils/notifications';\nimport { useWallet } from '../utils/wallet';\nimport { useConnection } from '../utils/connection';\nimport { useIsExtensionWidth } from '../utils/utils';\nimport DialogForm from './DialogForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SwapButton(_ref) {\n  _s();\n\n  let {\n    size\n  } = _ref;\n  const isExtensionWidth = useIsExtensionWidth();\n\n  if (isExtensionWidth) {\n    return /*#__PURE__*/_jsxDEV(SwapButtonDialog, {\n      size: size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(SwapButtonPopover, {\n      size: size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(SwapButton, \"cRxusu3s+MJ0l9PJpBu1Vq3D7NM=\", false, function () {\n  return [useIsExtensionWidth];\n});\n\n_c = SwapButton;\n\nfunction SwapButtonDialog(_ref2) {\n  _s2();\n\n  let {\n    size\n  } = _ref2;\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [sendTransaction] = useSendTransaction();\n  const connection = useConnection();\n  const wallet = useWallet();\n  const tokenInfos = useTokenInfos();\n  const tokenList = tokenInfos && new TokenListContainer(tokenInfos);\n  const provider = new NotifyingProvider(connection, wallet, sendTransaction);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Swap Tokens\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        size: size,\n        onClick: () => setDialogOpen(true),\n        children: /*#__PURE__*/_jsxDEV(SwapHoriz, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogForm, {\n      open: dialogOpen,\n      onClose: () => setDialogOpen(false),\n      fullWidth: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          flexDirection: 'column',\n          height: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Swap, {\n          provider: provider,\n          tokenList: tokenList,\n          containerStyle: {\n            width: '100%',\n            boxShadow: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setDialogOpen(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(SwapButtonDialog, \"W3smhRWoXWFxONufPHn0Jan1qAA=\", false, function () {\n  return [useSendTransaction, useConnection, useWallet, useTokenInfos];\n});\n\n_c2 = SwapButtonDialog;\n\nfunction SwapButtonPopover(_ref3) {\n  _s3();\n\n  let {\n    size\n  } = _ref3;\n  const [sendTransaction] = useSendTransaction();\n  const connection = useConnection();\n  const wallet = useWallet();\n  const tokenInfos = useTokenInfos();\n  const tokenList = tokenInfos && new TokenListContainer(tokenInfos);\n  const provider = new NotifyingProvider(connection, wallet, sendTransaction);\n  return tokenList && /*#__PURE__*/_jsxDEV(PopupState, {\n    variant: \"popover\",\n    children: popupState => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Swap Tokens\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, { ...bindTrigger(popupState),\n          size: size,\n          children: /*#__PURE__*/_jsxDEV(SwapHoriz, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Popover, { ...bindPopover(popupState),\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        PaperProps: {\n          style: {\n            borderRadius: '10px'\n          }\n        },\n        disableRestoreFocus: true,\n        keepMounted: true,\n        children: /*#__PURE__*/_jsxDEV(Swap, {\n          provider: provider,\n          tokenList: tokenList,\n          containerStyle: {\n            width: '432px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 7\n  }, this);\n}\n\n_s3(SwapButtonPopover, \"9/BDOVyyvXo3+kowhEiRIY4U0us=\", false, function () {\n  return [useSendTransaction, useConnection, useWallet, useTokenInfos];\n});\n\n_c3 = SwapButtonPopover;\n\nclass NotifyingProvider extends Provider {\n  constructor(connection, wallet, sendTransaction) {\n    super(connection, wallet, {\n      commitment: 'recent'\n    });\n    this.sendTransaction = sendTransaction;\n  }\n\n  async send(tx, signers, opts) {\n    return new Promise((onSuccess, onError) => {\n      this.sendTransaction(super.send(tx, signers, opts), {\n        onSuccess,\n        onError\n      });\n    });\n  }\n\n  async sendAll(txs, opts) {\n    return new Promise(async (resolve, onError) => {\n      let txSigs = [];\n\n      for (const tx of txs) {\n        txSigs.push(await new Promise(onSuccess => {\n          this.sendTransaction(super.send(tx.tx, tx.signers, opts), {\n            onSuccess,\n            onError\n          });\n        }));\n      }\n\n      resolve(txSigs);\n    });\n  }\n\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SwapButton\");\n$RefreshReg$(_c2, \"SwapButtonDialog\");\n$RefreshReg$(_c3, \"SwapButtonPopover\");","map":{"version":3,"sources":["/home/imentus/spl-token-wallet/src/components/SwapButton.js"],"names":["React","useState","Tooltip","Popover","IconButton","DialogActions","Button","SwapHoriz","PopupState","bindTrigger","bindPopover","Swap","Provider","TokenListContainer","useTokenInfos","useSendTransaction","useWallet","useConnection","useIsExtensionWidth","DialogForm","SwapButton","size","isExtensionWidth","SwapButtonDialog","dialogOpen","setDialogOpen","sendTransaction","connection","wallet","tokenInfos","tokenList","provider","NotifyingProvider","display","justifyContent","flexDirection","height","width","boxShadow","SwapButtonPopover","popupState","vertical","horizontal","style","borderRadius","constructor","commitment","send","tx","signers","opts","Promise","onSuccess","onError","sendAll","txs","resolve","txSigs","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Tooltip,\n  Popover,\n  IconButton,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\nimport SwapHoriz from '@material-ui/icons/SwapHoriz';\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\nimport Swap from '@project-serum/swap-ui';\nimport { Provider } from '@project-serum/anchor';\nimport { TokenListContainer } from '@solana/spl-token-registry';\nimport { useTokenInfos } from '../utils/tokens/names';\nimport { useSendTransaction } from '../utils/notifications';\nimport { useWallet } from '../utils/wallet';\nimport { useConnection } from '../utils/connection';\nimport { useIsExtensionWidth } from '../utils/utils';\nimport DialogForm from './DialogForm';\n\nexport default function SwapButton({ size }) {\n  const isExtensionWidth = useIsExtensionWidth();\n  if (isExtensionWidth) {\n    return <SwapButtonDialog size={size} />;\n  } else {\n    return <SwapButtonPopover size={size} />;\n  }\n}\n\nfunction SwapButtonDialog({ size }) {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [sendTransaction] = useSendTransaction();\n  const connection = useConnection();\n  const wallet = useWallet();\n  const tokenInfos = useTokenInfos();\n  const tokenList = tokenInfos && new TokenListContainer(tokenInfos);\n  const provider = new NotifyingProvider(connection, wallet, sendTransaction);\n  return (\n    <>\n      <Tooltip title=\"Swap Tokens\">\n        <IconButton size={size} onClick={() => setDialogOpen(true)}>\n          <SwapHoriz />\n        </IconButton>\n      </Tooltip>\n      <DialogForm\n        open={dialogOpen}\n        onClose={() => setDialogOpen(false)}\n        fullWidth\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            flexDirection: 'column',\n            height: '100%',\n          }}\n        >\n          <Swap\n            provider={provider}\n            tokenList={tokenList}\n            containerStyle={{\n              width: '100%',\n              boxShadow: 'none',\n            }}\n          />\n          <DialogActions>\n            <Button onClick={() => setDialogOpen(false)}>Close</Button>\n          </DialogActions>\n        </div>\n      </DialogForm>\n    </>\n  );\n}\n\nfunction SwapButtonPopover({ size }) {\n  const [sendTransaction] = useSendTransaction();\n  const connection = useConnection();\n  const wallet = useWallet();\n  const tokenInfos = useTokenInfos();\n  const tokenList = tokenInfos && new TokenListContainer(tokenInfos);\n  const provider = new NotifyingProvider(connection, wallet, sendTransaction);\n  return (\n    tokenList && (\n      <PopupState variant=\"popover\">\n        {(popupState) => (\n          <div style={{ display: 'flex' }}>\n            <Tooltip title=\"Swap Tokens\">\n              <IconButton {...bindTrigger(popupState)} size={size}>\n                <SwapHoriz />\n              </IconButton>\n            </Tooltip>\n            <Popover\n              {...bindPopover(popupState)}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              PaperProps={{ style: { borderRadius: '10px' } }}\n              disableRestoreFocus\n              keepMounted\n            >\n              <Swap\n                provider={provider}\n                tokenList={tokenList}\n                containerStyle={{ width: '432px' }}\n              />\n            </Popover>\n          </div>\n        )}\n      </PopupState>\n    )\n  );\n}\n\nclass NotifyingProvider extends Provider {\n  constructor(\n    connection,\n    wallet,\n    sendTransaction,\n  ) {\n    super(connection, wallet, {\n      commitment: 'recent',\n    });\n    this.sendTransaction = sendTransaction;\n  }\n\n  async send(\n    tx,\n    signers,\n    opts,\n  ) {\n    return new Promise((onSuccess, onError) => {\n      this.sendTransaction(super.send(tx, signers, opts), {\n        onSuccess,\n        onError,\n      });\n    });\n  }\n\n  async sendAll(\n    txs,\n    opts,\n  ) {\n    return new Promise(async (resolve, onError) => {\n      let txSigs = [];\n      for (const tx of txs) {\n        txSigs.push(\n          await new Promise((onSuccess) => {\n            this.sendTransaction(super.send(tx.tx, tx.signers, opts), {\n              onSuccess,\n              onError,\n            });\n          }),\n        );\n      }\n      resolve(txSigs);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}