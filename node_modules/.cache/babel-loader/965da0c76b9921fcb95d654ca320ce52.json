{"ast":null,"code":"var _jsxFileName = \"/home/imentus/spl-token-wallet/src/pages/PopupPage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useWallet, useWalletSelector } from '../utils/wallet';\nimport { PublicKey } from '@solana/web3.js';\nimport { Divider, FormControlLabel, SnackbarContent, Switch, Typography } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport { makeStyles } from '@material-ui/core/styles';\nimport assert from 'assert';\nimport bs58 from 'bs58';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { useLocalStorageState, isExtension } from '../utils/utils';\nimport SignTransactionFormContent from '../components/SignTransactionFormContent';\nimport SignFormContent from '../components/SignFormContent';\nimport { generateDiffieHelllman } from '../utils/diffie-hellman';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AUTHORIZED_METHODS = ['signTransaction', 'signAllTransactions', 'sign', 'diffieHellman'];\n\nfunction getInitialRequests() {\n  if (!isExtension) {\n    return [];\n  } // TODO CHECK OPENER (?)\n\n\n  const urlParams = new URLSearchParams(window.location.hash.slice(1));\n  const request = JSON.parse(urlParams.get('request'));\n\n  if (request.method === 'sign') {\n    const dataObj = request.params.data; // Deserialize `data` into a Uint8Array\n\n    if (!dataObj) {\n      throw new Error('Missing \"data\" params for \"sign\" request');\n    }\n\n    const data = new Uint8Array(Object.keys(dataObj).length);\n\n    for (const [index, value] of Object.entries(dataObj)) {\n      data[index] = value;\n    }\n\n    request.params.data = data;\n  }\n\n  return [request];\n}\n\nexport default function PopupPage(_ref) {\n  _s();\n\n  let {\n    opener\n  } = _ref;\n  const origin = useMemo(() => {\n    let params = new URLSearchParams(window.location.hash.slice(1));\n    return params.get('origin');\n  }, []);\n  const selectedWallet = useWallet();\n  const selectedWalletAddress = selectedWallet && selectedWallet.publicKey.toBase58();\n  const {\n    accounts,\n    setWalletSelector\n  } = useWalletSelector();\n  const [wallet, setWallet] = useState(isExtension ? null : selectedWallet);\n  const [connectedAccount, setConnectedAccount] = useState(null);\n  const hasConnectedAccount = !!connectedAccount;\n  const [requests, setRequests] = useState(getInitialRequests);\n  const [autoApprove, setAutoApprove] = useState(false);\n  const postMessage = useCallback(message => {\n    if (isExtension) {\n      chrome.runtime.sendMessage({\n        channel: 'sollet_extension_background_channel',\n        data: message\n      });\n    } else {\n      opener.postMessage({\n        jsonrpc: '2.0',\n        ...message\n      }, origin);\n    }\n  }, [opener, origin]); // Keep selectedWallet and wallet in sync.\n\n  useEffect(() => {\n    if (!isExtension) {\n      setWallet(selectedWallet);\n    } // using stronger condition here\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [selectedWalletAddress]); // (Extension only) Fetch connected wallet for site from local storage.\n\n  useEffect(() => {\n    if (isExtension) {\n      chrome.storage.local.get('connectedWallets', result => {\n        const connectedWallet = (result.connectedWallets || {})[origin];\n\n        if (connectedWallet) {\n          setWalletSelector(connectedWallet.selector);\n          setConnectedAccount(new PublicKey(connectedWallet.publicKey));\n          setAutoApprove(connectedWallet.autoApprove);\n        } else {\n          setConnectedAccount(selectedWallet.publicKey);\n        }\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [origin]); // (Extension only) Set wallet once connectedWallet is retrieved.\n\n  useEffect(() => {\n    if (isExtension && connectedAccount) {\n      setWallet(selectedWallet);\n    } // using stronger condition here\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [connectedAccount, selectedWalletAddress]); // Send a disconnect event if this window is closed, this component is\n  // unmounted, or setConnectedAccount(null) is called.\n\n  useEffect(() => {\n    if (hasConnectedAccount && !isExtension) {\n      function unloadHandler() {\n        postMessage({\n          method: 'disconnected'\n        });\n      }\n\n      window.addEventListener('beforeunload', unloadHandler);\n      return () => {\n        unloadHandler();\n        window.removeEventListener('beforeunload', unloadHandler);\n      };\n    }\n  }, [hasConnectedAccount, postMessage, origin]); // Disconnect if the user switches to a different wallet.\n\n  useEffect(() => {\n    if (!isExtension && wallet && connectedAccount && !connectedAccount.equals(wallet.publicKey)) {\n      setConnectedAccount(null);\n    }\n  }, [connectedAccount, wallet]); // Push requests from the parent window into a queue.\n\n  useEffect(() => {\n    function messageHandler(e) {\n      if (e.origin === origin && e.source === window.opener) {\n        if (!AUTHORIZED_METHODS.includes(e.data.method)) {\n          postMessage({\n            error: 'Unsupported method',\n            id: e.data.id\n          });\n        }\n\n        setRequests(requests => [...requests, e.data]);\n      }\n    }\n\n    window.addEventListener('message', messageHandler);\n    return () => window.removeEventListener('message', messageHandler);\n  }, [origin, postMessage]);\n  const request = requests[0];\n\n  const popRequest = () => setRequests(requests => requests.slice(1));\n\n  const {\n    messages,\n    messageDisplay\n  } = useMemo(() => {\n    if (!request || request.method === 'connect') {\n      return {\n        messages: [],\n        messageDisplay: 'tx'\n      };\n    }\n\n    switch (request.method) {\n      case 'diffieHellman':\n        return {\n          messages: [request.params.publicKey],\n          messageDisplay: 'diffieHellman'\n        };\n\n      case 'signTransaction':\n        return {\n          messages: [bs58.decode(request.params.message)],\n          messageDisplay: 'tx'\n        };\n\n      case 'signAllTransactions':\n        return {\n          messages: request.params.messages.map(m => bs58.decode(m)),\n          messageDisplay: 'tx'\n        };\n\n      case 'sign':\n        if (!(request.params.data instanceof Uint8Array)) {\n          throw new Error('Data must be an instance of Uint8Array');\n        }\n\n        return {\n          messages: [request.params.data],\n          messageDisplay: request.params.display === 'utf8' ? 'utf8' : 'hex'\n        };\n\n      default:\n        throw new Error('Unexpected method: ' + request.method);\n    }\n  }, [request]);\n\n  if (hasConnectedAccount && requests.length === 0) {\n    if (isExtension) {\n      window.close();\n    } else {\n      focusParent();\n    }\n\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: isExtension ? 'Submitting...' : 'Please keep this window open in the background.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!wallet) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading wallet...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 12\n    }, this);\n  }\n\n  const mustConnect = !connectedAccount || !connectedAccount.equals(wallet.publicKey); // We must detect when to show the connection form on the website as it is not sent as a request.\n\n  if (isExtension && request.method === 'connect' || !isExtension && mustConnect) {\n    // Approve the parent page to connect to this wallet.\n    function connect(autoApprove) {\n      setConnectedAccount(wallet.publicKey);\n\n      if (isExtension) {\n        chrome.storage.local.get('connectedWallets', result => {\n          // TODO better way to do this\n          const account = accounts.find(account => account.address.equals(wallet.publicKey));\n          const connectedWallets = { ...(result.connectedWallets || {}),\n            [origin]: {\n              publicKey: wallet.publicKey.toBase58(),\n              selector: account.selector,\n              autoApprove\n            }\n          };\n          chrome.storage.local.set({\n            connectedWallets\n          });\n        });\n      }\n\n      postMessage({\n        method: 'connected',\n        params: {\n          publicKey: wallet.publicKey.toBase58(),\n          autoApprove\n        },\n        id: isExtension ? request.id : undefined\n      });\n      setAutoApprove(autoApprove);\n\n      if (!isExtension) {\n        focusParent();\n      } else {\n        popRequest();\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(ApproveConnectionForm, {\n      origin: origin,\n      onApprove: connect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 12\n    }, this);\n  }\n\n  assert(AUTHORIZED_METHODS.includes(request.method) && wallet);\n\n  async function onApprove() {\n    popRequest();\n\n    switch (request.method) {\n      case 'diffieHellman':\n        return diffieHellman(messages[0]);\n\n      case 'signTransaction':\n      case 'sign':\n        sendSignature(messages[0]);\n        break;\n\n      case 'signAllTransactions':\n        sendAllSignatures(messages);\n        break;\n\n      default:\n        throw new Error('Unexpected method: ' + request.method);\n    }\n  }\n\n  async function sendSignature(message) {\n    postMessage({\n      result: {\n        signature: await wallet.createSignature(message),\n        publicKey: wallet.publicKey.toBase58()\n      },\n      id: request.id\n    });\n  }\n\n  async function sendAllSignatures(messages) {\n    let signatures; // Ledger must sign one by one.\n\n    if (wallet.type === 'ledger') {\n      signatures = [];\n\n      for (let k = 0; k < messages.length; k += 1) {\n        signatures.push(await wallet.createSignature(messages[k]));\n      }\n    } else {\n      signatures = await Promise.all(messages.map(m => wallet.createSignature(m)));\n    }\n\n    postMessage({\n      result: {\n        signatures,\n        publicKey: wallet.publicKey.toBase58()\n      },\n      id: request.id\n    });\n  }\n\n  function diffieHellman(publicKey) {\n    const keys = generateDiffieHelllman(publicKey, wallet.provider.account.secretKey);\n    postMessage({\n      result: keys,\n      id: request.id\n    });\n  }\n\n  function sendReject() {\n    popRequest();\n    postMessage({\n      error: 'Transaction cancelled',\n      id: request.id\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(ApproveSignatureForm, {\n    autoApprove: autoApprove,\n    origin: origin,\n    messages: messages,\n    messageDisplay: messageDisplay,\n    onApprove: onApprove,\n    onReject: sendReject\n  }, request.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n}\n/**\n * Switch focus to the parent window. This requires that the parent runs\n * `window.name = 'parent'` before opening the popup.\n */\n\n_s(PopupPage, \"/pDed6i8TpgeMXPHQF7ZH3OUvUc=\", false, function () {\n  return [useWallet, useWalletSelector];\n});\n\n_c = PopupPage;\n\nfunction focusParent() {\n  try {\n    window.open('', 'parent');\n  } catch (err) {\n    console.log('err', err);\n  }\n}\n\nconst useStyles = makeStyles(theme => ({\n  connection: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    textAlign: 'center'\n  },\n  transaction: {\n    wordBreak: 'break-all'\n  },\n  approveButton: {\n    backgroundColor: '#43a047',\n    color: 'white'\n  },\n  actions: {\n    justifyContent: 'space-between'\n  },\n  snackbarRoot: {\n    backgroundColor: theme.palette.background.paper\n  },\n  warningMessage: {\n    margin: theme.spacing(1),\n    color: theme.palette.text.primary\n  },\n  warningIcon: {\n    marginRight: theme.spacing(1),\n    fontSize: 24\n  },\n  warningTitle: {\n    color: theme.palette.warning.light,\n    fontWeight: 600,\n    fontSize: 16,\n    alignItems: 'center',\n    display: 'flex'\n  },\n  warningContainer: {\n    marginTop: theme.spacing(1)\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nfunction ApproveConnectionForm(_ref2) {\n  _s2();\n\n  let {\n    origin,\n    onApprove\n  } = _ref2;\n  const wallet = useWallet();\n  const {\n    accounts,\n    hardwareWalletAccount\n  } = useWalletSelector(); // TODO better way to do this\n\n  const account = accounts.concat([hardwareWalletAccount]).find(account => account && account.address.equals(wallet.publicKey));\n  const classes = useStyles();\n  const [autoApprove, setAutoApprove] = useState(false);\n  let [dismissed, setDismissed] = useLocalStorageState('dismissedAutoApproveWarning', false);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Allow this site to access your Gemachain account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.connection,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: origin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImportExportIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: account.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: [\"(\", wallet.publicKey.toBase58(), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Only connect with sites you trust.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        className: classes.divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: autoApprove,\n          onChange: () => setAutoApprove(!autoApprove),\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this),\n        label: `Automatically approve transactions from ${origin}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), !dismissed && autoApprove && /*#__PURE__*/_jsxDEV(SnackbarContent, {\n        className: classes.warningContainer,\n        message: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.warningTitle,\n            children: [/*#__PURE__*/_jsxDEV(WarningIcon, {\n              className: classes.warningIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 19\n            }, this), \"Use at your own risk.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.warningMessage,\n            children: \"This setting allows sending some transactions on your behalf without requesting your permission for the remainder of this session.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 15\n        }, this),\n        action: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setDismissed('1'),\n          children: \"I understand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 15\n        }, this)],\n        classes: {\n          root: classes.snackbarRoot\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: window.close,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: () => onApprove(autoApprove),\n        disabled: !dismissed && autoApprove,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 422,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ApproveConnectionForm, \"8HH31EgJIrrC3epKCau/81jVkvc=\", false, function () {\n  return [useWallet, useWalletSelector, useStyles, useLocalStorageState];\n});\n\n_c2 = ApproveConnectionForm;\n\nfunction ApproveSignatureForm(_ref3) {\n  _s3();\n\n  let {\n    origin,\n    messages,\n    messageDisplay,\n    onApprove,\n    onReject,\n    autoApprove\n  } = _ref3;\n  const classes = useStyles();\n  const buttonRef = useRef();\n  const isMultiTx = messageDisplay === 'tx' && messages.length > 1;\n\n  const renderFormContent = () => {\n    if (messageDisplay === 'tx') {\n      return /*#__PURE__*/_jsxDEV(SignTransactionFormContent, {\n        autoApprove: autoApprove,\n        origin: origin,\n        messages: messages,\n        onApprove: onApprove,\n        buttonRef: buttonRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(SignFormContent, {\n        origin: origin,\n        message: messages[0],\n        messageDisplay: messageDisplay,\n        buttonRef: buttonRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [renderFormContent(), /*#__PURE__*/_jsxDEV(CardActions, {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onReject,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        ref: buttonRef,\n        className: classes.approveButton,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: onApprove,\n        children: [\"Approve\", isMultiTx ? ' All' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 521,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(ApproveSignatureForm, \"nkEymHWdOMOITbmRYd3j8kn1x2o=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = ApproveSignatureForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PopupPage\");\n$RefreshReg$(_c2, \"ApproveConnectionForm\");\n$RefreshReg$(_c3, \"ApproveSignatureForm\");","map":{"version":3,"sources":["/home/imentus/spl-token-wallet/src/pages/PopupPage.js"],"names":["React","useCallback","useEffect","useMemo","useRef","useState","useWallet","useWalletSelector","PublicKey","Divider","FormControlLabel","SnackbarContent","Switch","Typography","Card","CardContent","CardActions","Button","ImportExportIcon","makeStyles","assert","bs58","WarningIcon","useLocalStorageState","isExtension","SignTransactionFormContent","SignFormContent","generateDiffieHelllman","AUTHORIZED_METHODS","getInitialRequests","urlParams","URLSearchParams","window","location","hash","slice","request","JSON","parse","get","method","dataObj","params","data","Error","Uint8Array","Object","keys","length","index","value","entries","PopupPage","opener","origin","selectedWallet","selectedWalletAddress","publicKey","toBase58","accounts","setWalletSelector","wallet","setWallet","connectedAccount","setConnectedAccount","hasConnectedAccount","requests","setRequests","autoApprove","setAutoApprove","postMessage","message","chrome","runtime","sendMessage","channel","jsonrpc","storage","local","result","connectedWallet","connectedWallets","selector","unloadHandler","addEventListener","removeEventListener","equals","messageHandler","e","source","includes","error","id","popRequest","messages","messageDisplay","decode","map","m","display","close","focusParent","mustConnect","connect","account","find","address","set","undefined","onApprove","diffieHellman","sendSignature","sendAllSignatures","signature","createSignature","signatures","type","k","push","Promise","all","provider","secretKey","sendReject","open","err","console","log","useStyles","theme","connection","marginTop","spacing","marginBottom","textAlign","transaction","wordBreak","approveButton","backgroundColor","color","actions","justifyContent","snackbarRoot","palette","background","paper","warningMessage","margin","text","primary","warningIcon","marginRight","fontSize","warningTitle","warning","light","fontWeight","alignItems","warningContainer","divider","ApproveConnectionForm","hardwareWalletAccount","concat","classes","dismissed","setDismissed","name","root","ApproveSignatureForm","onReject","buttonRef","isMultiTx","renderFormContent"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useWallet, useWalletSelector } from '../utils/wallet';\nimport { PublicKey } from '@solana/web3.js';\nimport {\n  Divider,\n  FormControlLabel,\n  SnackbarContent,\n  Switch,\n  Typography,\n} from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport { makeStyles } from '@material-ui/core/styles';\nimport assert from 'assert';\nimport bs58 from 'bs58';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { useLocalStorageState, isExtension } from '../utils/utils';\nimport SignTransactionFormContent from '../components/SignTransactionFormContent';\nimport SignFormContent from '../components/SignFormContent';\nimport { generateDiffieHelllman } from '../utils/diffie-hellman';\n\nconst AUTHORIZED_METHODS = [\n  'signTransaction',\n  'signAllTransactions',\n  'sign',\n  'diffieHellman',\n];\n\nfunction getInitialRequests() {\n  if (!isExtension) {\n    return [];\n  }\n\n  // TODO CHECK OPENER (?)\n\n  const urlParams = new URLSearchParams(window.location.hash.slice(1));\n  const request = JSON.parse(urlParams.get('request'));\n\n  if (request.method === 'sign') {\n    const dataObj = request.params.data;\n    // Deserialize `data` into a Uint8Array\n    if (!dataObj) {\n      throw new Error('Missing \"data\" params for \"sign\" request');\n    }\n\n    const data = new Uint8Array(Object.keys(dataObj).length);\n    for (const [index, value] of Object.entries(dataObj)) {\n      data[index] = value;\n    }\n    request.params.data = data;\n  }\n\n  return [request];\n}\n\nexport default function PopupPage({ opener }) {\n  const origin = useMemo(() => {\n    let params = new URLSearchParams(window.location.hash.slice(1));\n    return params.get('origin');\n  }, []);\n  const selectedWallet = useWallet();\n  const selectedWalletAddress =\n    selectedWallet && selectedWallet.publicKey.toBase58();\n  const { accounts, setWalletSelector } = useWalletSelector();\n  const [wallet, setWallet] = useState(isExtension ? null : selectedWallet);\n\n  const [connectedAccount, setConnectedAccount] = useState(null);\n  const hasConnectedAccount = !!connectedAccount;\n  const [requests, setRequests] = useState(getInitialRequests);\n  const [autoApprove, setAutoApprove] = useState(false);\n  const postMessage = useCallback(\n    (message) => {\n      if (isExtension) {\n        chrome.runtime.sendMessage({\n          channel: 'sollet_extension_background_channel',\n          data: message,\n        });\n      } else {\n        opener.postMessage({ jsonrpc: '2.0', ...message }, origin);\n      }\n    },\n    [opener, origin],\n  );\n\n  // Keep selectedWallet and wallet in sync.\n  useEffect(() => {\n    if (!isExtension) {\n      setWallet(selectedWallet);\n    }\n    // using stronger condition here\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedWalletAddress]);\n\n  // (Extension only) Fetch connected wallet for site from local storage.\n  useEffect(() => {\n    if (isExtension) {\n      chrome.storage.local.get('connectedWallets', (result) => {\n        const connectedWallet = (result.connectedWallets || {})[origin];\n        if (connectedWallet) {\n          setWalletSelector(connectedWallet.selector);\n          setConnectedAccount(new PublicKey(connectedWallet.publicKey));\n          setAutoApprove(connectedWallet.autoApprove);\n        } else {\n          setConnectedAccount(selectedWallet.publicKey);\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [origin]);\n\n  // (Extension only) Set wallet once connectedWallet is retrieved.\n  useEffect(() => {\n    if (isExtension && connectedAccount) {\n      setWallet(selectedWallet);\n    }\n    // using stronger condition here\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connectedAccount, selectedWalletAddress]);\n\n  // Send a disconnect event if this window is closed, this component is\n  // unmounted, or setConnectedAccount(null) is called.\n  useEffect(() => {\n    if (hasConnectedAccount && !isExtension) {\n      function unloadHandler() {\n        postMessage({ method: 'disconnected' });\n      }\n      window.addEventListener('beforeunload', unloadHandler);\n      return () => {\n        unloadHandler();\n        window.removeEventListener('beforeunload', unloadHandler);\n      };\n    }\n  }, [hasConnectedAccount, postMessage, origin]);\n\n  // Disconnect if the user switches to a different wallet.\n  useEffect(() => {\n    if (\n      !isExtension &&\n      wallet &&\n      connectedAccount &&\n      !connectedAccount.equals(wallet.publicKey)\n    ) {\n      setConnectedAccount(null);\n    }\n  }, [connectedAccount, wallet]);\n\n  // Push requests from the parent window into a queue.\n  useEffect(() => {\n    function messageHandler(e) {\n      if (e.origin === origin && e.source === window.opener) {\n        if (!AUTHORIZED_METHODS.includes(e.data.method)) {\n          postMessage({ error: 'Unsupported method', id: e.data.id });\n        }\n\n        setRequests((requests) => [...requests, e.data]);\n      }\n    }\n    window.addEventListener('message', messageHandler);\n    return () => window.removeEventListener('message', messageHandler);\n  }, [origin, postMessage]);\n\n  const request = requests[0];\n  const popRequest = () => setRequests((requests) => requests.slice(1));\n\n  const { messages, messageDisplay } = useMemo(() => {\n    if (!request || request.method === 'connect') {\n      return { messages: [], messageDisplay: 'tx' };\n    }\n    switch (request.method) {\n      case 'diffieHellman':\n        return {\n          messages: [request.params.publicKey],\n          messageDisplay: 'diffieHellman',\n        };\n      case 'signTransaction':\n        return {\n          messages: [bs58.decode(request.params.message)],\n          messageDisplay: 'tx',\n        };\n      case 'signAllTransactions':\n        return {\n          messages: request.params.messages.map((m) => bs58.decode(m)),\n          messageDisplay: 'tx',\n        };\n      case 'sign':\n        if (!(request.params.data instanceof Uint8Array)) {\n          throw new Error('Data must be an instance of Uint8Array');\n        }\n        return {\n          messages: [request.params.data],\n          messageDisplay: request.params.display === 'utf8' ? 'utf8' : 'hex',\n        };\n      default:\n        throw new Error('Unexpected method: ' + request.method);\n    }\n  }, [request]);\n\n  if (hasConnectedAccount && requests.length === 0) {\n    if (isExtension) {\n      window.close();\n    } else {\n      focusParent();\n    }\n\n    return (\n      <Typography>\n        {isExtension\n          ? 'Submitting...'\n          : 'Please keep this window open in the background.'}\n      </Typography>\n    );\n  }\n\n  if (!wallet) {\n    return <Typography>Loading wallet...</Typography>;\n  }\n\n  const mustConnect =\n    !connectedAccount || !connectedAccount.equals(wallet.publicKey);\n  // We must detect when to show the connection form on the website as it is not sent as a request.\n  if (\n    (isExtension && request.method === 'connect') ||\n    (!isExtension && mustConnect)\n  ) {\n    // Approve the parent page to connect to this wallet.\n    function connect(autoApprove) {\n      setConnectedAccount(wallet.publicKey);\n      if (isExtension) {\n        chrome.storage.local.get('connectedWallets', (result) => {\n          // TODO better way to do this\n          const account = accounts.find((account) =>\n            account.address.equals(wallet.publicKey),\n          );\n          const connectedWallets = {\n            ...(result.connectedWallets || {}),\n            [origin]: {\n              publicKey: wallet.publicKey.toBase58(),\n              selector: account.selector,\n              autoApprove,\n            },\n          };\n          chrome.storage.local.set({ connectedWallets });\n        });\n      }\n      postMessage({\n        method: 'connected',\n        params: { publicKey: wallet.publicKey.toBase58(), autoApprove },\n        id: isExtension ? request.id : undefined,\n      });\n      setAutoApprove(autoApprove);\n      if (!isExtension) {\n        focusParent();\n      } else {\n        popRequest();\n      }\n    }\n\n    return <ApproveConnectionForm origin={origin} onApprove={connect} />;\n  }\n\n  assert(AUTHORIZED_METHODS.includes(request.method) && wallet);\n\n  async function onApprove() {\n    popRequest();\n    switch (request.method) {\n      case 'diffieHellman':\n        return diffieHellman(messages[0]);\n      case 'signTransaction':\n      case 'sign':\n        sendSignature(messages[0]);\n        break;\n      case 'signAllTransactions':\n        sendAllSignatures(messages);\n        break;\n      default:\n        throw new Error('Unexpected method: ' + request.method);\n    }\n  }\n\n  async function sendSignature(message) {\n    postMessage({\n      result: {\n        signature: await wallet.createSignature(message),\n        publicKey: wallet.publicKey.toBase58(),\n      },\n      id: request.id,\n    });\n  }\n\n  async function sendAllSignatures(messages) {\n    let signatures;\n    // Ledger must sign one by one.\n    if (wallet.type === 'ledger') {\n      signatures = [];\n      for (let k = 0; k < messages.length; k += 1) {\n        signatures.push(await wallet.createSignature(messages[k]));\n      }\n    } else {\n      signatures = await Promise.all(\n        messages.map((m) => wallet.createSignature(m)),\n      );\n    }\n    postMessage({\n      result: {\n        signatures,\n        publicKey: wallet.publicKey.toBase58(),\n      },\n      id: request.id,\n    });\n  }\n\n  function diffieHellman(publicKey) {\n    const keys = generateDiffieHelllman(\n      publicKey,\n      wallet.provider.account.secretKey,\n    );\n    postMessage({\n      result: keys,\n      id: request.id,\n    });\n  }\n\n  function sendReject() {\n    popRequest();\n    postMessage({\n      error: 'Transaction cancelled',\n      id: request.id,\n    });\n  }\n\n  return (\n    <ApproveSignatureForm\n      key={request.id}\n      autoApprove={autoApprove}\n      origin={origin}\n      messages={messages}\n      messageDisplay={messageDisplay}\n      onApprove={onApprove}\n      onReject={sendReject}\n    />\n  );\n}\n\n/**\n * Switch focus to the parent window. This requires that the parent runs\n * `window.name = 'parent'` before opening the popup.\n */\nfunction focusParent() {\n  try {\n    window.open('', 'parent');\n  } catch (err) {\n    console.log('err', err);\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  connection: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    textAlign: 'center',\n  },\n  transaction: {\n    wordBreak: 'break-all',\n  },\n  approveButton: {\n    backgroundColor: '#43a047',\n    color: 'white',\n  },\n  actions: {\n    justifyContent: 'space-between',\n  },\n  snackbarRoot: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  warningMessage: {\n    margin: theme.spacing(1),\n    color: theme.palette.text.primary,\n  },\n  warningIcon: {\n    marginRight: theme.spacing(1),\n    fontSize: 24,\n  },\n  warningTitle: {\n    color: theme.palette.warning.light,\n    fontWeight: 600,\n    fontSize: 16,\n    alignItems: 'center',\n    display: 'flex',\n  },\n  warningContainer: {\n    marginTop: theme.spacing(1),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nfunction ApproveConnectionForm({ origin, onApprove }) {\n  const wallet = useWallet();\n  const { accounts, hardwareWalletAccount } = useWalletSelector();\n  // TODO better way to do this\n  const account = accounts\n    .concat([hardwareWalletAccount])\n    .find((account) => account && account.address.equals(wallet.publicKey));\n  const classes = useStyles();\n  const [autoApprove, setAutoApprove] = useState(false);\n  let [dismissed, setDismissed] = useLocalStorageState(\n    'dismissedAutoApproveWarning',\n    false,\n  );\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h1\" gutterBottom>\n          Allow this site to access your Gemachain account?\n        </Typography>\n        <div className={classes.connection}>\n          <Typography>{origin}</Typography>\n          <ImportExportIcon fontSize=\"large\" />\n          <Typography>{account.name}</Typography>\n          <Typography variant=\"caption\">\n            ({wallet.publicKey.toBase58()})\n          </Typography>\n        </div>\n        <Typography>Only connect with sites you trust.</Typography>\n        <Divider className={classes.divider} />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={autoApprove}\n              onChange={() => setAutoApprove(!autoApprove)}\n              color=\"primary\"\n            />\n          }\n          label={`Automatically approve transactions from ${origin}`}\n        />\n        {!dismissed && autoApprove && (\n          <SnackbarContent\n            className={classes.warningContainer}\n            message={\n              <div>\n                <span className={classes.warningTitle}>\n                  <WarningIcon className={classes.warningIcon} />\n                  Use at your own risk.\n                </span>\n                <Typography className={classes.warningMessage}>\n                  This setting allows sending some transactions on your behalf\n                  without requesting your permission for the remainder of this\n                  session.\n                </Typography>\n              </div>\n            }\n            action={[\n              <Button onClick={() => setDismissed('1')}>I understand</Button>,\n            ]}\n            classes={{ root: classes.snackbarRoot }}\n          />\n        )}\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button onClick={window.close}>Cancel</Button>\n        <Button\n          color=\"primary\"\n          onClick={() => onApprove(autoApprove)}\n          disabled={!dismissed && autoApprove}\n        >\n          Connect\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nfunction ApproveSignatureForm({\n  origin,\n  messages,\n  messageDisplay,\n  onApprove,\n  onReject,\n  autoApprove,\n}) {\n  const classes = useStyles();\n  const buttonRef = useRef();\n\n  const isMultiTx = messageDisplay === 'tx' && messages.length > 1;\n\n  const renderFormContent = () => {\n    if (messageDisplay === 'tx') {\n      return (\n        <SignTransactionFormContent\n          autoApprove={autoApprove}\n          origin={origin}\n          messages={messages}\n          onApprove={onApprove}\n          buttonRef={buttonRef}\n        />\n      );\n    } else {\n      return (\n        <SignFormContent\n          origin={origin}\n          message={messages[0]}\n          messageDisplay={messageDisplay}\n          buttonRef={buttonRef}\n        />\n      );\n    }\n  };\n\n  return (\n    <Card>\n      {renderFormContent()}\n      <CardActions className={classes.actions}>\n        <Button onClick={onReject}>Cancel</Button>\n        <Button\n          ref={buttonRef}\n          className={classes.approveButton}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={onApprove}\n        >\n          Approve{isMultiTx ? ' All' : ''}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}