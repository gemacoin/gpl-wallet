{"ast":null,"code":"var _jsxFileName = \"/home/imentus/spl-token-wallet/src/components/FtxPay/FtxPayDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DialogForm from '../DialogForm';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { useWalletSelector } from '../../utils/wallet';\nimport { usePopularTokens } from '../../utils/tokens/names';\nimport TokenIcon from '../TokenIcon';\nimport Link from '@material-ui/core/Link';\nimport { abbreviateAddress, useIsExtensionWidth } from '../../utils/utils';\nimport FormControl from '@material-ui/core/FormControl';\nimport { useSolanaExplorerUrlSuffix } from '../../utils/connection';\nimport { MenuItem, Select } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  menuItem: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  tokenIcon: {\n    marginRight: theme.spacing(1)\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: theme.spacing(3)\n  },\n  selector: {\n    marginRight: theme.spacing(3)\n  }\n}));\nexport default function FtxPayDialog(_ref) {\n  _s();\n\n  var _selectedAccount$addr;\n\n  let {\n    open,\n    onClose\n  } = _ref;\n  const {\n    accounts\n  } = useWalletSelector();\n  const classes = useStyles();\n  const popularTokens = usePopularTokens();\n  const selectedAccount = accounts.find(a => a.isSelected);\n  const [coin, setCoin] = useState('GEMA');\n  const address = selectedAccount === null || selectedAccount === void 0 ? void 0 : (_selectedAccount$addr = selectedAccount.address) === null || _selectedAccount$addr === void 0 ? void 0 : _selectedAccount$addr.toBase58();\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n  const isExtensionWidth = useIsExtensionWidth();\n\n  const onSubmit = () => {\n    const urlSearchParams = new URLSearchParams();\n    urlSearchParams.append('address', address);\n    urlSearchParams.append('coin', coin);\n    urlSearchParams.append('wallet', 'gema');\n    urlSearchParams.append('memoIsRequired', false);\n    window.open(`https://ftx.com/pay/request?${urlSearchParams}`, '_blank', 'resizable,width=450,height=780');\n  };\n\n  return /*#__PURE__*/_jsxDEV(DialogForm, {\n    open: open,\n    onClose: onClose,\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: [\"Deposit funds with\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n        target: \"_blank\",\n        href: 'https://ftx.com/pay',\n        children: \"FTX Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"Send funds to your Sollet wallet from an FTX account, where you can add funds using crypto on multiple blockchains, credit cards, and more.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"If you don't have an FTX account, it may take a few moments to get up.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          className: classes.selector,\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            value: coin,\n            onChange: e => setCoin(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 'GEMA',\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.menuItem,\n                children: [/*#__PURE__*/_jsxDEV(TokenIcon, {\n                  url: null,\n                  mint: null,\n                  tokenName: 'GEMA',\n                  size: 30,\n                  className: classes.tokenIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: isExtensionWidth ? 'GEMA' : 'Solana GEMA'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), popularTokens.filter(tokenInfo => tokenInfo.address && tokenInfo.symbol).map(tokenInfo => {\n              var _tokenInfo$name;\n\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: tokenInfo.symbol,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.menuItem,\n                  children: [/*#__PURE__*/_jsxDEV(TokenIcon, {\n                    url: tokenInfo.logoUri,\n                    tokenName: tokenInfo.name,\n                    size: 30,\n                    className: classes.tokenIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    target: \"_blank\",\n                    rel: \"noopener\",\n                    href: `https://solscan.io/account/${tokenInfo.address}` + urlSuffix,\n                    children: (isExtensionWidth ? '' : `${(_tokenInfo$name = tokenInfo.name) !== null && _tokenInfo$name !== void 0 ? _tokenInfo$name : abbreviateAddress(tokenInfo.address)} `) + tokenInfo.symbol\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this)\n              }, tokenInfo.symbol, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onSubmit,\n          size: \"large\",\n          color: \"primary\",\n          children: \"Open FTX Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FtxPayDialog, \"tWzFc17Wdl0SnW+x/mo+vTNHRdc=\", false, function () {\n  return [useWalletSelector, useStyles, usePopularTokens, useSolanaExplorerUrlSuffix, useIsExtensionWidth];\n});\n\n_c = FtxPayDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"FtxPayDialog\");","map":{"version":3,"sources":["/home/imentus/spl-token-wallet/src/components/FtxPay/FtxPayDialog.js"],"names":["React","useState","DialogForm","DialogContent","DialogContentText","DialogTitle","Button","DialogActions","useWalletSelector","usePopularTokens","TokenIcon","Link","abbreviateAddress","useIsExtensionWidth","FormControl","useSolanaExplorerUrlSuffix","MenuItem","Select","makeStyles","useStyles","theme","menuItem","display","flexDirection","alignItems","tokenIcon","marginRight","spacing","container","justifyContent","marginTop","selector","FtxPayDialog","open","onClose","accounts","classes","popularTokens","selectedAccount","find","a","isSelected","coin","setCoin","address","toBase58","urlSuffix","isExtensionWidth","onSubmit","urlSearchParams","URLSearchParams","append","window","e","target","value","filter","tokenInfo","symbol","map","logoUri","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport DialogForm from '../DialogForm';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { useWalletSelector } from '../../utils/wallet';\nimport { usePopularTokens } from '../../utils/tokens/names';\nimport TokenIcon from '../TokenIcon';\nimport Link from '@material-ui/core/Link';\nimport { abbreviateAddress, useIsExtensionWidth } from '../../utils/utils';\nimport FormControl from '@material-ui/core/FormControl';\nimport { useSolanaExplorerUrlSuffix } from '../../utils/connection';\nimport { MenuItem, Select } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  menuItem: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  tokenIcon: {\n    marginRight: theme.spacing(1),\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: theme.spacing(3),\n  },\n  selector: {\n    marginRight: theme.spacing(3),\n  },\n}));\n\nexport default function FtxPayDialog({ open, onClose }) {\n  const { accounts } = useWalletSelector();\n  const classes = useStyles();\n  const popularTokens = usePopularTokens();\n  const selectedAccount = accounts.find((a) => a.isSelected);\n  const [coin, setCoin] = useState('GEMA');\n  const address = selectedAccount?.address?.toBase58();\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n  const isExtensionWidth = useIsExtensionWidth();\n\n  const onSubmit = () => {\n    const urlSearchParams = new URLSearchParams();\n    urlSearchParams.append('address', address);\n    urlSearchParams.append('coin', coin);\n    urlSearchParams.append('wallet', 'gema');\n    urlSearchParams.append('memoIsRequired', false);\n    window.open(\n      `https://ftx.com/pay/request?${urlSearchParams}`,\n      '_blank',\n      'resizable,width=450,height=780',\n    );\n  };\n\n  return (\n    <DialogForm open={open} onClose={onClose} fullWidth>\n      <DialogTitle>\n        Deposit funds with{' '}\n        <Link target=\"_blank\" href={'https://ftx.com/pay'}>\n          FTX Pay\n        </Link>\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Send funds to your Sollet wallet from an FTX account, where you can add funds using crypto on multiple blockchains, credit cards, and more.\n        </DialogContentText>\n        <DialogContentText>\n          If you don't have an FTX account, it may take a few moments to get up.\n        </DialogContentText>\n        <div className={classes.container}>\n          <FormControl variant=\"outlined\" className={classes.selector}>\n            <Select value={coin} onChange={(e) => setCoin(e.target.value)}>\n              <MenuItem value={'GEMA'}>\n                <div className={classes.menuItem}>\n                  <TokenIcon\n                    url={null}\n                    mint={null}\n                    tokenName={'GEMA'}\n                    size={30}\n                    className={classes.tokenIcon}\n                  />\n                  <div>{isExtensionWidth ? 'GEMA' : 'Solana GEMA'}</div>\n                </div>\n              </MenuItem>\n              {popularTokens\n                .filter((tokenInfo) => tokenInfo.address && tokenInfo.symbol)\n                .map((tokenInfo) => (\n                  <MenuItem value={tokenInfo.symbol} key={tokenInfo.symbol}>\n                    <div className={classes.menuItem}>\n                      <TokenIcon\n                        url={tokenInfo.logoUri}\n                        tokenName={tokenInfo.name}\n                        size={30}\n                        className={classes.tokenIcon}\n                      />\n                      <Link\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                        href={\n                          `https://solscan.io/account/${tokenInfo.address}` +\n                          urlSuffix\n                        }\n                      >\n                        {(isExtensionWidth ? '' : `${tokenInfo.name ?? abbreviateAddress(tokenInfo.address)} `) + tokenInfo.symbol}\n                      </Link>\n                    </div>\n                  </MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n          <Button onClick={onSubmit} size=\"large\" color=\"primary\">\n            Open FTX Pay\n          </Button>\n        </div>\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={onClose}>Close</Button>\n      </DialogActions>\n    </DialogForm>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}