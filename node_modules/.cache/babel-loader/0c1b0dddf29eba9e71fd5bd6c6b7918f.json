{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeTokenInstruction = exports.TokenInstructions = exports.TokenInstructionLayout = exports.WRAPPED_GEMA_MINT = exports.TOKEN_PROGRAM_ID = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst borsh_1 = require(\"@project-serum/borsh\");\n\nexports.TOKEN_PROGRAM_ID = new web3_js_1.PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\nexports.WRAPPED_GEMA_MINT = new web3_js_1.PublicKey('So11111111111111111111111111111111111111112');\nexports.TokenInstructionLayout = borsh_1.rustEnum([borsh_1.struct([borsh_1.u8('decimals'), borsh_1.publicKey('mintAuthority'), borsh_1.option(borsh_1.publicKey(), 'freezeAuthority')], 'initializeMint'), borsh_1.struct([], 'initializeAccount'), borsh_1.struct([borsh_1.u8('m')], 'initializeMultisig'), borsh_1.struct([borsh_1.u64('amount')], 'transfer'), borsh_1.struct([borsh_1.u64('amount')], 'approve'), borsh_1.struct([], 'revoke'), borsh_1.struct([borsh_1.u8('authorityType'), borsh_1.option(borsh_1.publicKey(), 'newAuthority')], 'setAuthority'), borsh_1.struct([borsh_1.u64('amount')], 'mintTo'), borsh_1.struct([borsh_1.u64('amount')], 'burn'), borsh_1.struct([], 'closeAccount'), borsh_1.struct([], 'freezeAccount'), borsh_1.struct([], 'thawAccount'), borsh_1.struct([borsh_1.u64('amount'), borsh_1.u8('decimals')], 'transferChecked'), borsh_1.struct([borsh_1.u64('amount'), borsh_1.u8('decimals')], 'approveChecked'), borsh_1.struct([borsh_1.u64('amount'), borsh_1.u8('decimals')], 'mintToChecked'), borsh_1.struct([borsh_1.u64('amount'), borsh_1.u8('decimals')], 'burnChecked')]);\nconst instructionMaxSpan = Math.max(...Object.values(exports.TokenInstructionLayout.registry).map(r => r.span));\n\nfunction encodeTokenInstructionData(instruction) {\n  const b = Buffer.alloc(instructionMaxSpan);\n  const span = exports.TokenInstructionLayout.encode(instruction, b);\n  return b.slice(0, span);\n}\n\nfunction decodeTokenInstructionData(data) {\n  return exports.TokenInstructionLayout.decode(data);\n}\n\nclass TokenInstructions {\n  static initializeMint(_ref) {\n    let {\n      mint,\n      decimals,\n      mintAuthority,\n      freezeAuthority\n    } = _ref;\n    const keys = [{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      data: encodeTokenInstructionData({\n        initializeMint: {\n          decimals,\n          mintAuthority,\n          freezeAuthority: freezeAuthority !== null && freezeAuthority !== void 0 ? freezeAuthority : null\n        }\n      }),\n      programId: exports.TOKEN_PROGRAM_ID\n    });\n  }\n\n  static initializeAccount(_ref2) {\n    let {\n      account,\n      mint,\n      owner\n    } = _ref2;\n    const keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: owner,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      data: encodeTokenInstructionData({\n        initializeAccount: {}\n      }),\n      programId: exports.TOKEN_PROGRAM_ID\n    });\n  }\n\n  static transfer(_ref3) {\n    let {\n      source,\n      destination,\n      amount,\n      owner\n    } = _ref3;\n    const keys = [{\n      pubkey: source,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: destination,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: owner,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      data: encodeTokenInstructionData({\n        transfer: {\n          amount\n        }\n      }),\n      programId: exports.TOKEN_PROGRAM_ID\n    });\n  }\n\n  static approve(_ref4) {\n    let {\n      source,\n      delegate,\n      amount,\n      owner\n    } = _ref4;\n    const keys = [{\n      pubkey: source,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: delegate,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: owner,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      data: encodeTokenInstructionData({\n        approve: {\n          amount\n        }\n      }),\n      programId: exports.TOKEN_PROGRAM_ID\n    });\n  }\n\n  static revoke(_ref5) {\n    let {\n      source,\n      owner\n    } = _ref5;\n    const keys = [{\n      pubkey: source,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: owner,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      data: encodeTokenInstructionData({\n        revoke: {}\n      }),\n      programId: exports.TOKEN_PROGRAM_ID\n    });\n  }\n\n  static setAuthority(_ref6) {\n    let {\n      target,\n      currentAuthority,\n      newAuthority,\n      authorityType\n    } = _ref6;\n    const keys = [{\n      pubkey: target,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: currentAuthority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      data: encodeTokenInstructionData({\n        setAuthority: {\n          authorityType,\n          newAuthority: newAuthority !== null && newAuthority !== void 0 ? newAuthority : null\n        }\n      }),\n      programId: exports.TOKEN_PROGRAM_ID\n    });\n  }\n\n  static mintTo(_ref7) {\n    let {\n      mint,\n      destination,\n      amount,\n      mintAuthority\n    } = _ref7;\n    const keys = [{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: destination,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mintAuthority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      data: encodeTokenInstructionData({\n        mintTo: {\n          amount\n        }\n      }),\n      programId: exports.TOKEN_PROGRAM_ID\n    });\n  }\n\n  static closeAccount(_ref8) {\n    let {\n      source,\n      destination,\n      owner\n    } = _ref8;\n    const keys = [{\n      pubkey: source,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: destination,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: owner,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      data: encodeTokenInstructionData({\n        closeAccount: {}\n      }),\n      programId: exports.TOKEN_PROGRAM_ID\n    });\n  }\n\n}\n\nexports.TokenInstructions = TokenInstructions;\n\nfunction decodeTokenInstruction(instruction) {\n  const data = decodeTokenInstructionData(instruction.data);\n\n  if ('initializeMint' in data) {\n    const type = 'initializeMint';\n    const params = {\n      decimals: data.initializeMint.decimals,\n      mint: instruction.keys[0].pubkey,\n      mintAuthority: data.initializeMint.mintAuthority,\n      freezeAuthority: data.initializeMint.freezeAuthority\n    };\n    return {\n      type,\n      params\n    };\n  } else if ('initializeAccount' in data) {\n    const type = 'initializeAccount';\n    const params = {\n      account: instruction.keys[0].pubkey,\n      mint: instruction.keys[1].pubkey,\n      owner: instruction.keys[2].pubkey\n    };\n    return {\n      type,\n      params\n    };\n  } else if ('transfer' in data) {\n    const type = 'transfer';\n    const params = {\n      source: instruction.keys[0].pubkey,\n      destination: instruction.keys[1].pubkey,\n      owner: instruction.keys[2].pubkey,\n      amount: data.transfer.amount\n    };\n    return {\n      type,\n      params\n    };\n  } else if ('approve' in data) {\n    const type = 'approve';\n    const params = {\n      source: instruction.keys[0].pubkey,\n      delegate: instruction.keys[1].pubkey,\n      owner: instruction.keys[2].pubkey,\n      amount: data.approve.amount\n    };\n    return {\n      type,\n      params\n    };\n  } else if ('revoke' in data) {\n    const type = 'revoke';\n    const params = {\n      source: instruction.keys[0].pubkey,\n      owner: instruction.keys[1].pubkey\n    };\n    return {\n      type,\n      params\n    };\n  } else if ('setAuthority' in data) {\n    const type = 'setAuthority';\n    const params = {\n      target: instruction.keys[0].pubkey,\n      currentAuthority: instruction.keys[1].pubkey,\n      newAuthority: data.setAuthority.newAuthority,\n      authorityType: data.setAuthority.authorityType\n    };\n    return {\n      type,\n      params\n    };\n  } else if ('mintTo' in data) {\n    const type = 'mintTo';\n    const params = {\n      mint: instruction.keys[0].pubkey,\n      destination: instruction.keys[1].pubkey,\n      mintAuthority: instruction.keys[2].pubkey,\n      amount: data.mintTo.amount\n    };\n    return {\n      type,\n      params\n    };\n  } else if ('burn' in data) {\n    const type = 'burn';\n    const params = {\n      source: instruction.keys[0].pubkey,\n      mint: instruction.keys[1].pubkey,\n      owner: instruction.keys[2].pubkey,\n      amount: data.burn.amount\n    };\n    return {\n      type,\n      params\n    };\n  } else if ('closeAccount' in data) {\n    const type = 'closeAccount';\n    const params = {\n      source: instruction.keys[0].pubkey,\n      destination: instruction.keys[1].pubkey,\n      owner: instruction.keys[2].pubkey\n    };\n    return {\n      type,\n      params\n    };\n  } else if ('transferChecked' in data) {\n    const type = 'transfer';\n    const params = {\n      source: instruction.keys[0].pubkey,\n      destination: instruction.keys[2].pubkey,\n      owner: instruction.keys[3].pubkey,\n      amount: data.transferChecked.amount\n    };\n    return {\n      type,\n      params\n    };\n  } else if ('approveChecked' in data) {\n    const type = 'approve';\n    const params = {\n      source: instruction.keys[0].pubkey,\n      delegate: instruction.keys[2].pubkey,\n      owner: instruction.keys[3].pubkey,\n      amount: data.approveChecked.amount\n    };\n    return {\n      type,\n      params\n    };\n  } else if ('mintToChecked' in data) {\n    const type = 'mintTo';\n    const params = {\n      mint: instruction.keys[0].pubkey,\n      destination: instruction.keys[1].pubkey,\n      mintAuthority: instruction.keys[2].pubkey,\n      amount: data.mintToChecked.amount\n    };\n    return {\n      type,\n      params\n    };\n  } else if ('burnChecked' in data) {\n    const type = 'burn';\n    const params = {\n      source: instruction.keys[0].pubkey,\n      mint: instruction.keys[1].pubkey,\n      owner: instruction.keys[2].pubkey,\n      amount: data.burnChecked.amount\n    };\n    return {\n      type,\n      params\n    };\n  } else {\n    throw new Error('Unsupported token instruction type');\n  }\n}\n\nexports.decodeTokenInstruction = decodeTokenInstruction;","map":{"version":3,"sources":["../../src/instructions.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeTokenInstruction = exports.TokenInstructions = exports.TokenInstructionLayout = exports.WRAPPED_GEMA_MINT = exports.TOKEN_PROGRAM_ID = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst borsh_1 = require(\"@project-serum/borsh\");\nexports.TOKEN_PROGRAM_ID = new web3_js_1.PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\nexports.WRAPPED_GEMA_MINT = new web3_js_1.PublicKey('So11111111111111111111111111111111111111112');\nexports.TokenInstructionLayout = borsh_1.rustEnum([\n    borsh_1.struct([\n        borsh_1.u8('decimals'),\n        borsh_1.publicKey('mintAuthority'),\n        borsh_1.option(borsh_1.publicKey(), 'freezeAuthority'),\n    ], 'initializeMint'),\n    borsh_1.struct([], 'initializeAccount'),\n    borsh_1.struct([borsh_1.u8('m')], 'initializeMultisig'),\n    borsh_1.struct([borsh_1.u64('amount')], 'transfer'),\n    borsh_1.struct([borsh_1.u64('amount')], 'approve'),\n    borsh_1.struct([], 'revoke'),\n    borsh_1.struct([borsh_1.u8('authorityType'), borsh_1.option(borsh_1.publicKey(), 'newAuthority')], 'setAuthority'),\n    borsh_1.struct([borsh_1.u64('amount')], 'mintTo'),\n    borsh_1.struct([borsh_1.u64('amount')], 'burn'),\n    borsh_1.struct([], 'closeAccount'),\n    borsh_1.struct([], 'freezeAccount'),\n    borsh_1.struct([], 'thawAccount'),\n    borsh_1.struct([borsh_1.u64('amount'), borsh_1.u8('decimals')], 'transferChecked'),\n    borsh_1.struct([borsh_1.u64('amount'), borsh_1.u8('decimals')], 'approveChecked'),\n    borsh_1.struct([borsh_1.u64('amount'), borsh_1.u8('decimals')], 'mintToChecked'),\n    borsh_1.struct([borsh_1.u64('amount'), borsh_1.u8('decimals')], 'burnChecked'),\n]);\nconst instructionMaxSpan = Math.max(...Object.values(exports.TokenInstructionLayout.registry).map(r => r.span));\nfunction encodeTokenInstructionData(instruction) {\n    const b = Buffer.alloc(instructionMaxSpan);\n    const span = exports.TokenInstructionLayout.encode(instruction, b);\n    return b.slice(0, span);\n}\nfunction decodeTokenInstructionData(data) {\n    return exports.TokenInstructionLayout.decode(data);\n}\nclass TokenInstructions {\n    static initializeMint({ mint, decimals, mintAuthority, freezeAuthority, }) {\n        const keys = [\n            { pubkey: mint, isSigner: false, isWritable: true },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            data: encodeTokenInstructionData({\n                initializeMint: {\n                    decimals,\n                    mintAuthority,\n                    freezeAuthority: freezeAuthority !== null && freezeAuthority !== void 0 ? freezeAuthority : null,\n                },\n            }),\n            programId: exports.TOKEN_PROGRAM_ID,\n        });\n    }\n    static initializeAccount({ account, mint, owner, }) {\n        const keys = [\n            { pubkey: account, isSigner: false, isWritable: true },\n            { pubkey: mint, isSigner: false, isWritable: false },\n            { pubkey: owner, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            data: encodeTokenInstructionData({\n                initializeAccount: {},\n            }),\n            programId: exports.TOKEN_PROGRAM_ID,\n        });\n    }\n    static transfer({ source, destination, amount, owner, }) {\n        const keys = [\n            { pubkey: source, isSigner: false, isWritable: true },\n            { pubkey: destination, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n        ];\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            data: encodeTokenInstructionData({\n                transfer: {\n                    amount,\n                },\n            }),\n            programId: exports.TOKEN_PROGRAM_ID,\n        });\n    }\n    static approve({ source, delegate, amount, owner, }) {\n        const keys = [\n            { pubkey: source, isSigner: false, isWritable: true },\n            { pubkey: delegate, isSigner: false, isWritable: false },\n            { pubkey: owner, isSigner: true, isWritable: false },\n        ];\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            data: encodeTokenInstructionData({\n                approve: { amount },\n            }),\n            programId: exports.TOKEN_PROGRAM_ID,\n        });\n    }\n    static revoke({ source, owner }) {\n        const keys = [\n            { pubkey: source, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n        ];\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            data: encodeTokenInstructionData({\n                revoke: {},\n            }),\n            programId: exports.TOKEN_PROGRAM_ID,\n        });\n    }\n    static setAuthority({ target, currentAuthority, newAuthority, authorityType, }) {\n        const keys = [\n            { pubkey: target, isSigner: false, isWritable: true },\n            { pubkey: currentAuthority, isSigner: true, isWritable: false },\n        ];\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            data: encodeTokenInstructionData({\n                setAuthority: {\n                    authorityType,\n                    newAuthority: newAuthority !== null && newAuthority !== void 0 ? newAuthority : null,\n                },\n            }),\n            programId: exports.TOKEN_PROGRAM_ID,\n        });\n    }\n    static mintTo({ mint, destination, amount, mintAuthority, }) {\n        const keys = [\n            { pubkey: mint, isSigner: false, isWritable: true },\n            { pubkey: destination, isSigner: false, isWritable: true },\n            { pubkey: mintAuthority, isSigner: true, isWritable: false },\n        ];\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            data: encodeTokenInstructionData({\n                mintTo: {\n                    amount,\n                },\n            }),\n            programId: exports.TOKEN_PROGRAM_ID,\n        });\n    }\n    static closeAccount({ source, destination, owner, }) {\n        const keys = [\n            { pubkey: source, isSigner: false, isWritable: true },\n            { pubkey: destination, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n        ];\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            data: encodeTokenInstructionData({\n                closeAccount: {},\n            }),\n            programId: exports.TOKEN_PROGRAM_ID,\n        });\n    }\n}\nexports.TokenInstructions = TokenInstructions;\nfunction decodeTokenInstruction(instruction) {\n    const data = decodeTokenInstructionData(instruction.data);\n    if ('initializeMint' in data) {\n        const type = 'initializeMint';\n        const params = {\n            decimals: data.initializeMint.decimals,\n            mint: instruction.keys[0].pubkey,\n            mintAuthority: data.initializeMint.mintAuthority,\n            freezeAuthority: data.initializeMint.freezeAuthority,\n        };\n        return { type, params };\n    }\n    else if ('initializeAccount' in data) {\n        const type = 'initializeAccount';\n        const params = {\n            account: instruction.keys[0].pubkey,\n            mint: instruction.keys[1].pubkey,\n            owner: instruction.keys[2].pubkey,\n        };\n        return { type, params };\n    }\n    else if ('transfer' in data) {\n        const type = 'transfer';\n        const params = {\n            source: instruction.keys[0].pubkey,\n            destination: instruction.keys[1].pubkey,\n            owner: instruction.keys[2].pubkey,\n            amount: data.transfer.amount,\n        };\n        return { type, params };\n    }\n    else if ('approve' in data) {\n        const type = 'approve';\n        const params = {\n            source: instruction.keys[0].pubkey,\n            delegate: instruction.keys[1].pubkey,\n            owner: instruction.keys[2].pubkey,\n            amount: data.approve.amount,\n        };\n        return { type, params };\n    }\n    else if ('revoke' in data) {\n        const type = 'revoke';\n        const params = {\n            source: instruction.keys[0].pubkey,\n            owner: instruction.keys[1].pubkey,\n        };\n        return { type, params };\n    }\n    else if ('setAuthority' in data) {\n        const type = 'setAuthority';\n        const params = {\n            target: instruction.keys[0].pubkey,\n            currentAuthority: instruction.keys[1].pubkey,\n            newAuthority: data.setAuthority.newAuthority,\n            authorityType: data.setAuthority.authorityType,\n        };\n        return { type, params };\n    }\n    else if ('mintTo' in data) {\n        const type = 'mintTo';\n        const params = {\n            mint: instruction.keys[0].pubkey,\n            destination: instruction.keys[1].pubkey,\n            mintAuthority: instruction.keys[2].pubkey,\n            amount: data.mintTo.amount,\n        };\n        return { type, params };\n    }\n    else if ('burn' in data) {\n        const type = 'burn';\n        const params = {\n            source: instruction.keys[0].pubkey,\n            mint: instruction.keys[1].pubkey,\n            owner: instruction.keys[2].pubkey,\n            amount: data.burn.amount,\n        };\n        return { type, params };\n    }\n    else if ('closeAccount' in data) {\n        const type = 'closeAccount';\n        const params = {\n            source: instruction.keys[0].pubkey,\n            destination: instruction.keys[1].pubkey,\n            owner: instruction.keys[2].pubkey,\n        };\n        return { type, params };\n    }\n    else if ('transferChecked' in data) {\n        const type = 'transfer';\n        const params = {\n            source: instruction.keys[0].pubkey,\n            destination: instruction.keys[2].pubkey,\n            owner: instruction.keys[3].pubkey,\n            amount: data.transferChecked.amount,\n        };\n        return { type, params };\n    }\n    else if ('approveChecked' in data) {\n        const type = 'approve';\n        const params = {\n            source: instruction.keys[0].pubkey,\n            delegate: instruction.keys[2].pubkey,\n            owner: instruction.keys[3].pubkey,\n            amount: data.approveChecked.amount,\n        };\n        return { type, params };\n    }\n    else if ('mintToChecked' in data) {\n        const type = 'mintTo';\n        const params = {\n            mint: instruction.keys[0].pubkey,\n            destination: instruction.keys[1].pubkey,\n            mintAuthority: instruction.keys[2].pubkey,\n            amount: data.mintToChecked.amount,\n        };\n        return { type, params };\n    }\n    else if ('burnChecked' in data) {\n        const type = 'burn';\n        const params = {\n            source: instruction.keys[0].pubkey,\n            mint: instruction.keys[1].pubkey,\n            owner: instruction.keys[2].pubkey,\n            amount: data.burnChecked.amount,\n        };\n        return { type, params };\n    }\n    else {\n        throw new Error('Unsupported token instruction type');\n    }\n}\nexports.decodeTokenInstruction = decodeTokenInstruction;\n//# sourceMappingURL=instructions.js.map"]},"metadata":{},"sourceType":"script"}